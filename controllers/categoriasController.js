// ======================================================
// üéØ CONTROLADOR DE CATEGOR√çAS
// ======================================================

const categoriasModel = require("../models/categoriasModel");

// El controlador se encarga de recibir las peticiones HTTP,
// ejecutar las funciones del modelo y responder con JSON.
const categoriasController = {
  // ======================================================
  // 1Ô∏è‚É£ Obtener todas las categor√≠as
  // ======================================================
  async obtenerTodas(req, res) {
    try {
      const categorias = await categoriasModel.getAll();
      res.status(200).json(categorias);
    } catch (error) {
      console.error("‚ùå Error al obtener categor√≠as:", error);
      res.status(500).json({ error: "Error interno del servidor" });
    }
  },

  // ======================================================
  // 2Ô∏è‚É£ Obtener una categor√≠a por ID
  // ======================================================
  async obtenerPorId(req, res) {
    try {
      const { id } = req.params;
      const categoria = await categoriasModel.getById(id);
      if (!categoria) {
        return res.status(404).json({ mensaje: "Categor√≠a no encontrada" });
      }
      res.status(200).json(categoria);
    } catch (error) {
      console.error("‚ùå Error al obtener categor√≠a:", error);
      res.status(500).json({ error: "Error interno del servidor" });
    }
  },

  // ======================================================
  // 3Ô∏è‚É£ Crear una nueva categor√≠a
  // ======================================================
  async crear(req, res) {
    try {
      const { nombre, descripcion } = req.body;

      if (!nombre || nombre.trim() === "") {
        return res.status(400).json({ mensaje: "El campo 'nombre' es obligatorio" });
      }

      const nuevaCategoria = await categoriasModel.create({ nombre, descripcion });
      res.status(201).json({
        mensaje: "Categor√≠a creada correctamente",
        data: nuevaCategoria,
      });
    } catch (error) {
      console.error("‚ùå Error al crear categor√≠a:", error);
      res.status(500).json({ error: "Error interno del servidor" });
    }
  },

  // ======================================================
  // 4Ô∏è‚É£ Actualizar una categor√≠a existente
  // ======================================================
  async actualizar(req, res) {
    try {
      const { id } = req.params;
      const { nombre, descripcion } = req.body;

      if (!nombre || nombre.trim() === "") {
        return res.status(400).json({ mensaje: "El campo 'nombre' es obligatorio" });
      }

      const categoriaActualizada = await categoriasModel.update(id, { nombre, descripcion });
      res.status(200).json({
        mensaje: "Categor√≠a actualizada correctamente",
        data: categoriaActualizada,
      });
    } catch (error) {
      console.error("‚ùå Error al actualizar categor√≠a:", error);
      res.status(500).json({ error: "Error interno del servidor" });
    }
  },

  // ======================================================
  // 5Ô∏è‚É£ Eliminar una categor√≠a
  // ======================================================
  async eliminar(req, res) {
    try {
      const { id } = req.params;
      await categoriasModel.remove(id);
      res.status(200).json({ mensaje: "Categor√≠a eliminada correctamente" });
    } catch (error) {
      console.error("‚ùå Error al eliminar categor√≠a:", error);
      res.status(500).json({ error: "Error interno del servidor" });
    }
  },
};

module.exports = categoriasController;
